model: {
  second: {
    network_class_name: "VoxelNetLyftMultiHead"
    voxel_generator {
      full_empty_part_with_mean: false
      point_cloud_range : [-50, -50, -5, 50, 50, 3]
      voxel_size : [0.25, 0.25, 8]
      max_number_of_points_per_voxel : 60
    }
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNetRadius"
      num_filters: [64]
      with_distance: false
      num_input_features: 4
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
      downsample_factor: 1
      num_input_features: 64
    }
    rpn: {
      module_class_name: "RPNNoHead"
      layer_nums: [3, 5, 5]
      layer_strides: [6, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [0.5, 1, 2]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
      num_input_features: 64
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    num_point_features: 4 # model's num point feature should be independent of dataset
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true
    sin_error_factor: 1.0

    use_direction_classifier: true
    direction_loss_weight: 0.2
    num_direction_bins: 2
    direction_limit_offset: 0
    direction_offset: 0.78

    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [-59.6, -59.6, -10, 59.6, 59.6, 10]

    nms_class_agnostic: false # only valid in multi-class nms
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      class_settings: {
        class_name: "bus" #3
        anchor_generator_range: {
          sizes: [2.92514028, 12.59500991, 3.44541394]
          anchor_ranges: [-50, -50, -0.36061722, 50, 50, -0.36061722]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.5
        unmatched_threshold : 0.35
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 100, 100]
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "car" #1
        anchor_generator_range: {
          sizes: [1.91589497, 4.7544353, 1.71027705] # wlh
          anchor_ranges: [-50, -50, -1.06436449, 50, 50, -1.06436449]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.4
        unmatched_threshold : 0.3
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 100, 100]
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "emergency_vehicle" #4
        anchor_generator_range: {
          sizes: [2.42169697, 6.52033333, 2.3430303]
          anchor_ranges: [-50, -50, -0.83768946, 50, 50, -0.83768946]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.4
        unmatched_threshold : 0.3
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 100, 100]
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "other_vehicle" #8
        anchor_generator_range: {
          sizes: [2.75099192, 8.11314957, 3.19853996]
          anchor_ranges: [-50, -50, -0.67800548, 50, 50, -0.67800548]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.5
        unmatched_threshold : 0.35
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 100, 100]
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "truck" #9
        anchor_generator_range: {
          sizes: [2.85421269, 10.27240759, 3.48516545]
          anchor_ranges: [-50, -50, -0.21300383, 50, 50, -0.21300383]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.5
        unmatched_threshold : 0.35
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 100, 100]
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "bicycle" #2
        anchor_generator_range: {
          sizes: [0.60606815, 1.7325698, 1.38373001] # wlh
          anchor_ranges: [-40, -40, -1.03805591, 40, 40, -1.03805591]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.3
        unmatched_threshold : 0.2
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 160, 160]
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "motorcycle" #5
        anchor_generator_range: {
          sizes: [0.9734199, 2.30709709, 1.57797573] # wlh
          anchor_ranges: [-40, -40, -1.28594053, 40, 40, -1.28594053]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.3
        unmatched_threshold : 0.2
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 160, 160]
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "pedestrian" #6
        anchor_generator_range: {
          sizes: [0.76223812, 0.80798318, 1.76140816]
          anchor_ranges: [-40, -40, -0.90557261, 40, 40, -0.90557261]
          rotations: [0] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.2
        unmatched_threshold : 0.1
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 160, 160]
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "animal" #7
        anchor_generator_range: {
          sizes: [0.37827586, 0.7646, 0.51795862]
          anchor_ranges: [-40, -40, -1.70907064, 40, 40, -1.70907064]
          rotations: [0] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.5
        unmatched_threshold : 0.35
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.05
        nms_iou_threshold: 0.5
        feature_map_size: [1, 160, 160]
        region_similarity_calculator: {
          distance_similarity: {
            distance_norm: 1.0 # match range
            with_rotation: false
            rotation_alpha: 0.0 # rot error contribution
          }
        }
      }
      sample_positive_fraction : -1
      sample_size : 512
      assign_per_class: true
    }
  }
}

train_input_reader: {
  dataset: {
    dataset_class_name: "LyftDatasetD8"
    kitti_info_path: "../data/lyft_train/infos_train.pkl"
    kitti_root_path:"../data/lyft_train"
  }

  batch_size: 3
  preprocess: {
    max_number_of_voxels: 25000
    shuffle_points: false
    num_workers: 3
    groundtruth_localization_noise_std: [0, 0, 0]
    groundtruth_rotation_uniform_noise: [0, 0]
    # groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
    # groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
    global_rotation_uniform_noise: [0, 0]
    global_scaling_uniform_noise: [1.0, 1.0]
    global_random_rotation_range_per_object: [0, 0]
    global_translate_noise_std: [0, 0, 0]
    anchor_area_threshold: -1
    remove_points_after_sample: true
    groundtruth_points_drop_percentage: 0.0
    groundtruth_drop_max_keep_points: 15
    remove_unknown_examples: false
    sample_importance: 0.5
    random_flip_x: true
    random_flip_y: true
    remove_environment: false
    database_sampler {
      database_info_path: "../data/lyft_train/dbinfos_train.pkl"
      sample_groups {
        name_to_max_num {
          key: "bus"
          value: 4
        }
      }
      sample_groups {
        name_to_max_num {
          key: "other_vehicle"
          value: 4
        }
      }
      sample_groups {
        name_to_max_num {
          key: "truck"
          value: 4
        }
      }
      global_random_rotation_range_per_object: [0, 0]
      rate: 1.0
    }
  }
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        one_cycle: {
          lr_max: 3e-3
          moms: [0.95, 0.85]
          div_factor: 10.0
          pct_start: 0.4
        }
      }
      weight_decay: 0.01
    }
    fixed_weight_decay: true
    use_moving_average: false
  }
  steps: 13270 # 17514/8*2 - 4 cycles
  steps_per_eval: 13270 # 14065 * 2
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false
  loss_scale_factor: -1
  clear_metrics_every_epoch: true
}

eval_input_reader: {
  dataset: {
    dataset_class_name: "LyftDatasetD8"
    kitti_info_path: "../data/lyft_train/infos_val.pkl"
    kitti_root_path: "../data/lyft_train"
  }
  batch_size: 3
  preprocess: {
    max_number_of_voxels: 30000
    shuffle_points: false
    num_workers: 2
    anchor_area_threshold: -1
    remove_environment: false
  }
}
